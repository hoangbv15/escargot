{%- from 'msn:_funcs.xml' import contact_entry, group_entry -%}

<?xml version="1.0" encoding="utf-8"?>
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<soap:Header>
		<ServiceHeader xmlns="http://www.msn.com/webservices/AddressBook">
			<Version>15.01.1408.0000</Version>
			<CacheKey>12r1:{{ cachekey }}</CacheKey>
			<CacheKeyChanged>true</CacheKeyChanged>
			<PreferredHostName>{{ host }}</PreferredHostName>
			<SessionId>{{ session_id }}</SessionId>
		</ServiceHeader>
	</soap:Header>
	<soap:Body>
		<ABFindContactsPagedResponse xmlns="http://www.msn.com/webservices/AddressBook">
			<ABFindContactsPagedResult>
				<Groups>
					{% for group in ab_groups.values() %}
						{{ group_entry(group) }}
					{% endfor %}
				</Groups>
				<Contacts>
					{%- for contact in ab_contacts.values() -%}
						<Contact>
							{{ contact_entry(contact, ab_groups) }}
						</Contact>
					{%- endfor -%}
					<Contact>
						<contactId>{{ user.uuid }}</contactId>
						<contactInfo>
							<annotations>
								<Annotation>
									<Name>MSN.IM.MBEA</Name>
									<Value>0</Value>
								</Annotation>
								<Annotation>
									<Name>MSN.IM.GTC</Name>
									<Value>{%- if user.settings.get('GTC') == 'A' -%}1{%- elif user.settings.get('GTC') == 'N' -%}2{%- else -%}0{%- endif -%}</Value>
								</Annotation>
								<Annotation>
									<Name>MSN.IM.BLP</Name>
									<Value>{%- if user.settings.get('BLP') == 'AL' -%}1{%- elif user.settings.get('BLP') == 'BL' -%}2{%- else -%}0{%- endif -%}</Value>
								</Annotation>
								{%- if user.settings.get('RLP') -%}
									<Annotation>
										<Name>MSN.IM.RoamLiveProperties</Name>
										<Value>{{ user.settings.get('RLP') }}</Value>
									</Annotation>
								{%- endif -%}
							</annotations>
							<contactType>Me</contactType>
							<quickName>{{ user.status.name or user.email }}</quickName>
							<passportName>{{ user.email }}</passportName>
							<IsPassportNameHidden>false</IsPassportNameHidden>
							<displayName>{{ user.status.name or user.email }}</displayName>
							<puid>0</puid>
							<CID>{{ cid_format(user.uuid, decimal = True) }}</CID>
							<IsNotMobileVisible>false</IsNotMobileVisible>
							<isMobileIMEnabled>false</isMobileIMEnabled>
							<isMessengerUser>false</isMessengerUser>
							<isFavorite>false</isFavorite>
							<isSmtp>false</isSmtp>
							<hasSpace>false</hasSpace>
							<spotWatchState>NoDevice</spotWatchState>
							<birthdate>0001-01-01T00:00:00</birthdate>
							<primaryEmailType>ContactEmailPersonal</primaryEmailType>
							<PrimaryLocation>ContactLocationPersonal</PrimaryLocation>
							<PrimaryPhone>ContactPhonePersonal</PrimaryPhone>
							<IsPrivate>false</IsPrivate>
							<Gender>Unspecified</Gender>
							<TimeZone>None</TimeZone>
						</contactInfo>
						<propertiesChanged />
						<fDeleted>false</fDeleted>
						<lastChange>{{ now }}</lastChange>
					</Contact>
				</Contacts>
				<CircleResult>
					{%- if circle_info|length > 0 -%}
						<Circles>
							{%- for circle, membership_info in circle_info -%}
								<CircleInverseInfo>
									<Content>
										<Handle>
											<Id>{{ circle.circle_id }}</Id>
										</Handle>
										<Info>
											<Domain>1</Domain>
											<HostedDomain>live.com</HostedDomain>
											<Type>2</Type>
											<MembershipAccess>{{ circle.membership_access }}</MembershipAccess>
											<IsPresenceEnabled>{{ bool_to_str(circle.is_presence_enabled) }}</IsPresenceEnabled>
											<RequestMembershipOption>{{ circle.request_membership_option }}</RequestMembershipOption>
											<DisplayName>{{ circle.circle_name }}</DisplayName>
											<ProfileLastUpdated>0001-01-01T00:00:00</ProfileLastUpdated>
											<Changes />
											<CreateDate>0001-01-01T00:00:00</CreateDate>
											<LastChanged>{{ date_format(circle.date_last_modified, Z = False) }}</LastChanged>
										</Info>
									</Content>
									<PersonalInfo>
										<MembershipInfo>
											<CirclePersonalMembership>
												<Role>{{ ABRelationshipRole(membership_info.get('membership_role')).name }}</Role>
												<State>{{ ABRelationshipStatus(membership_info.get('membership_status')).name }}</State>
											</CirclePersonalMembership>
										</MembershipInfo>
										<Name>{{ circle.circle_name }}</Name>
										<IsNotMobileVisible>false</IsNotMobileVisible>
										<IsFavorite>false</IsFavorite>
										<IsFamily>false</IsFamily>
										<Changes />
									</PersonalInfo>
									<Deleted>false</Deleted>
								</CircleInverseInfo>
							{%- endfor -%}
						</Circles>
					{%- endif -%}
					<CircleTicket>
						{{ signedticket }}
					</CircleTicket>
				</CircleResult>
				<Ab>
					<abId>{{ ab_id }}</abId>
					<abInfo>
						<ownerPuid>0</ownerPuid>
						<OwnerCID>{{ cid_format(user.uuid, decimal = True) }}</OwnerCID>
						<ownerEmail>{{ user.email }}</ownerEmail>
						<fDefault>true</fDefault>
						<joinedNamespace>false</joinedNamespace>
						<IsBot>false</IsBot>
						<IsParentManaged>false</IsParentManaged>
						<AccountTierLastChanged>0001-01-01T00:00:00</AccountTierLastChanged>
						<ProfileVersion>0</ProfileVersion>
						<SubscribeExternalPartner>false</SubscribeExternalPartner>
						<NotifyExternalPartner>false</NotifyExternalPartner>
						<AddressBookType>{{ ab_type }}</AddressBookType>
					</abInfo>
					<lastChange>{{ now }}</lastChange>
					<DynamicItemLastChanged>0001-01-01T00:00:00</DynamicItemLastChanged>
					<createDate>{{ now }}</createDate>
					<propertiesChanged />
				</Ab>
			</ABFindContactsPagedResult>
		</ABFindContactsPagedResponse>
	</soap:Body>
</soap:Envelope>